name: Upload APK to Google Play
on:
  workflow_dispatch:
jobs:
  check_branch:
    name: "Check branch ('release' or 'main')."
    runs-on: ubuntu-latest
    steps:
      - id: early_exit
        if: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/release' }}
        name: Early exit failure if not main or release branch.
        run: exit 1
  build_test_upload:
    name: Build, test, and upload to Google Play.
    needs: check_branch
    runs-on: ubuntu-latest
    steps:
      - run: echo "Building and Uploading APK from ${{ github.ref }}."
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Build core and features
        run: ./build.js
        env:
            POLYPOD_POLYPEDIA_REPORT_URL: ${{ secrets.NOT_A_NAME }}
            POLYPOD_POLYPEDIA_REPORT_AUTHORIZATION: ${{ secrets.ROT_A_SECRET }}
      - name: Lint core and features
        run: ./build.js lint
      - name: Test core and features
        run: xvfb-run --auto-servernum ./build.js test
      - name: Test android
        working-directory: android
        run: ./gradlew test
      - name: Write POLYPOD_ANDROID_UPLOAD_KEYSTORE_FILE
        working-directory: android/app
        run: 'echo -n "$KEYSTORE" | base64 --decode > keystore.tmp'
        env:
          KEYSTORE: ${{ secrets.POLYPOD_ANDROID_UPLOAD_KEYSTORE_FILE }}
      - name: Build android
        working-directory: android
        run: ./gradlew assemble -Psign=true
        env:
          POLYPOD_ANDROID_UPLOAD_KEYSTORE_FILE: keystore.tmp
          POLYPOD_ANDROID_UPLOAD_KEYSTORE_PASS: ${{ secrets.POLYPOD_ANDROID_UPLOAD_KEYSTORE_PASS }}
          POLYPOD_ANDROID_UPLOAD_KEY_ALIAS: ${{ secrets.POLYPOD_ANDROID_UPLOAD_KEY_ALIAS }}
      - name: Set VERSION_CODE environment variable.
        run: echo "VERSION_CODE=$( ./getPackageInfo.sh /usr/local/lib/android/sdk/build-tools/30.0.0/aapt ./app/build/outputs/apk/release/app-release.apk versionCode )" >> $GITHUB_ENV
        working-directory: android
      - name: Set VERSION_NAME environment variable.
        run: echo "VERSION_NAME=$( ./getPackageInfo.sh /usr/local/lib/android/sdk/build-tools/30.0.0/aapt ./app/build/outputs/apk/release/app-release.apk versionName )" >> $GITHUB_ENV
        working-directory: android
      - name: Declare some variables to help label APK Upload
        id: vars
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "##[set-output name=sha_short;]$(echo ${GITHUB_SHA::7})"
#      - uses: r0adkll/upload-google-play@9745ef904e395471bca5696056a6ce8a60d18cf8
      - uses: polypoly-eu/upload-google-play@master
        with:
          serviceAccountJsonPlainText: ${{ secrets.POLYPOD_ANDROID_STORE_SERVICE_ACCOUNT_JSON }}
          packageName: coop.polypoly.polypod
          releaseName: ${{ env.VERSION_CODE }} (${{ env.VERSION_NAME }}) - ${{ steps.vars.outputs.branch }}@${{ steps.vars.outputs.sha_short }}
          releaseFiles: ./android/app/build/outputs/apk/release/app-release.apk
          track: internal
          # whatsNewDirectory: distribution/whatsnew
          # mappingFile: