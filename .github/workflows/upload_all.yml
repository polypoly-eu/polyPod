name: Upload

on:
  workflow_dispatch:
    inputs:
      targets:
        type: choice
        description: Where to upload
        options:
        - all
        - google-play
        - app-store

jobs:
  build_test_upload:
    name: Build, test, and upload
    runs-on: macos-latest
    steps:
      - name: Fail if uploading from non-release branch
        if: |
          github.ref != 'refs/heads/main'
          && startsWith(github.ref, 'refs/heads/release') != true
          && startsWith(github.ref, 'refs/heads/prod4pod-1426') != true
        run: exit 1
      - run: echo "Uploading ${{ github.ref }}"
      - name: Set upload targets
        run: |
          if [[ '${{ github.event.inputs.targets }}' =~ ^(all|google-play)$ ]]; then
              echo "Uploading to Google Play"
              echo "POLYPOD_UPLOAD_GOOGLE_PLAY=true" >> $GITHUB_ENV
          fi
          if [[ '${{ github.event.inputs.targets }}' =~ ^(all|app-store)$ ]]; then
              echo "Uploading to the App Store"
              echo "POLYPOD_UPLOAD_APP_STORE=true" >> $GITHUB_ENV
          fi
      - uses: actions/checkout@v2

      # API and features
      - name: API and features - Setup
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
      - name: API and features - Lint
        run: ./build.js lint
      - name: API and features - Build
        run: ./build.js
        env:
          POLYPOD_POLYPEDIA_REPORT_URL: ${{ secrets.POLYPOD_POLYPEDIA_REPORT_URL }}
          POLYPOD_POLYPEDIA_REPORT_AUTHORIZATION: ${{ secrets.POLYPOD_POLYPEDIA_REPORT_AUTHORIZATION }}
      - name: API and features - Test
        run: ./build.js test

      # Android
      - name: Android - Setup
        uses: actions/setup-java@v1
        if: env.POLYPOD_UPLOAD_GOOGLE_PLAY == 'true'
        with:
          java-version: 11
      - name: Android - Test
        if: env.POLYPOD_UPLOAD_GOOGLE_PLAY == 'true'
        working-directory: platform/android
        run: ./gradlew test
      - name: Android - Write POLYPOD_ANDROID_UPLOAD_KEYSTORE_FILE
        if: env.POLYPOD_UPLOAD_GOOGLE_PLAY == 'true'
        working-directory: platform/android/app
        run: 'echo -n "$KEYSTORE" | base64 --decode > keystore.tmp'
        env:
          KEYSTORE: ${{ secrets.POLYPOD_ANDROID_UPLOAD_KEYSTORE_FILE }}
      - name: Android - Build
        if: env.POLYPOD_UPLOAD_GOOGLE_PLAY == 'true'
        working-directory: platform/android
        run: ./gradlew assemble -Psign=true
        env:
          POLYPOD_ANDROID_UPLOAD_KEYSTORE_FILE: keystore.tmp
          POLYPOD_ANDROID_UPLOAD_KEYSTORE_PASS: ${{ secrets.POLYPOD_ANDROID_UPLOAD_KEYSTORE_PASS }}
          POLYPOD_ANDROID_UPLOAD_KEY_ALIAS: ${{ secrets.POLYPOD_ANDROID_UPLOAD_KEY_ALIAS }}
      - name: Android - Set VERSION_CODE environment variable.
        if: env.POLYPOD_UPLOAD_GOOGLE_PLAY == 'true'
        run: echo "VERSION_CODE=$( ./getPackageInfo.sh /usr/local/lib/android/sdk/build-tools/30.0.0/aapt ./app/build/outputs/apk/release/app-release.apk versionCode )" >> $GITHUB_ENV
        working-directory: platform/android
      - name: Android - Set VERSION_NAME environment variable.
        if: env.POLYPOD_UPLOAD_GOOGLE_PLAY == 'true'
        run: echo "VERSION_NAME=$( ./getPackageInfo.sh /usr/local/lib/android/sdk/build-tools/30.0.0/aapt ./app/build/outputs/apk/release/app-release.apk versionName )" >> $GITHUB_ENV
        working-directory: platform/android
      - name: Android - Declare some variables to help label APK Upload
        if: env.POLYPOD_UPLOAD_GOOGLE_PLAY == 'true'
        id: vars
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "##[set-output name=sha_short;]$(echo ${GITHUB_SHA::7})"
      - name: Android - Upload
        # uses: r0adkll/upload-google-play@9745ef904e395471bca5696056a6ce8a60d18cf8
        uses: polypoly-eu/upload-google-play@master
        if: env.POLYPOD_UPLOAD_GOOGLE_PLAY == 'true'
        with:
          serviceAccountJsonPlainText: ${{ secrets.POLYPOD_ANDROID_STORE_SERVICE_ACCOUNT_JSON }}
          packageName: coop.polypoly.polypod
          releaseName: ${{ env.VERSION_CODE }} (${{ env.VERSION_NAME }}) - ${{ steps.vars.outputs.branch }}@${{ steps.vars.outputs.sha_short }}
          releaseFiles: ./platform/android/app/build/outputs/apk/release/app-release.apk
          track: internal
          # whatsNewDirectory: distribution/whatsnew
          # mappingFile:

      # iOS
      - name: iOS - Lock Xcode version
        if: env.POLYPOD_UPLOAD_APP_STORE == 'true'
        working-directory: platform/ios
        run: make lockxcodeversion
      - name: iOS - Tests
        if: env.POLYPOD_UPLOAD_APP_STORE == 'true'
        working-directory: platform/ios
        run: make test
      - name: iOS - Install distribution prerequisites
        if: env.POLYPOD_UPLOAD_APP_STORE == 'true'
        working-directory: platform/ios
        env:
          POLYPOD_APPLE_IOS_APPSTORE_P12_FILE_BASE64: ${{ secrets.POLYPOD_APPLE_IOS_APPSTORE_P12_FILE_BASE64 }}
          POLYPOD_APPLE_IOS_APPSTORE_P12_PASS: ${{ secrets.POLYPOD_APPLE_IOS_APPSTORE_P12_PASS }}
          POLYPOD_APPLE_IOS_APPSTORE_PROVISION_PROFILE_BASE64: ${{ secrets.POLYPOD_APPLE_IOS_APPSTORE_PROVISION_PROFILE_BASE64 }}
          POLYPOD_APPLE_IOS_APPSTORE_API_PRIVATE_KEY_BASE64: ${{ secrets.POLYPOD_APPLE_IOS_APPSTORE_API_PRIVATE_KEY_BASE64 }}
          POLYPOD_APPLE_IOS_APPSTORE_API_KEY_ID: ${{ secrets.POLYPOD_APPLE_IOS_APPSTORE_API_KEY_ID }}
        run: make install_distribution_prerequisites
      - name: iOS - Export and upload IPA
        if: env.POLYPOD_UPLOAD_APP_STORE == 'true'
        working-directory: platform/ios
        env:
          POLYPOD_APPLE_IOS_APPSTORE_API_ISSUER_ID: ${{ secrets.POLYPOD_APPLE_IOS_APPSTORE_API_ISSUER_ID }}
          POLYPOD_APPLE_IOS_APPSTORE_API_KEY_ID: ${{ secrets.POLYPOD_APPLE_IOS_APPSTORE_API_KEY_ID }}
        run: make upload_ipa
