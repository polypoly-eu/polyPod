name: Upload

on:
  workflow_dispatch:
    inputs:
      targets:
        type: choice
        description: Where to upload
        options:
        - all
        - google-play
        - app-store

jobs:
  build_test_upload:
    name: Build, test, and upload to Google Play.
    runs-on: macos-11
    steps:
      - run: echo "Uploading ${{ github.ref }} to ${{ github.event.inputs.targets }}"
      - name: Set POLYPOD_UPLOAD_GOOGLE_PLAY
        if: github.event.inputs.targets == 'all' || github.event.inputs.targets == 'google-play'
        run: echo "POLYPOD_UPLOAD_GOOGLE_PLAY=true" >> $GITHUB_ENV
      - name: Set POLYPOD_UPLOAD_APP_STORE
        if: github.event.inputs.targets == "all" || github.event.inputs.targets == "app-store"
        run: echo "POLYPOD_UPLOAD_APP_STORE=true" >> $GITHUB_ENV
      - id: early_exit
        if: ${{ github.ref != 'refs/heads/main' && startsWith(github.ref, 'refs/heads/release') != true && startsWith(github.ref, 'refs/heads/prod4pod-1426') != true }}
        name: Early exit failure if not main or release branch.
        run: exit 1
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
      - name: Build API and features
        run: ./build.js
        env:
          POLYPOD_POLYPEDIA_REPORT_URL: ${{ secrets.POLYPOD_POLYPEDIA_REPORT_URL }}
          POLYPOD_POLYPEDIA_REPORT_AUTHORIZATION: ${{ secrets.POLYPOD_POLYPEDIA_REPORT_AUTHORIZATION }}
      - name: Lint API and features
        run: ./build.js lint
      - name: Test API and features
        run: xvfb-run --auto-servernum ./build.js test

      # Android

      - uses: actions/setup-java@v1
        if: env.POLYPOD_UPLOAD_GOOGLE_PLAY == "true"
        with:
          java-version: 11

#       - name: Test android
#         working-directory: platform/android
#         run: ./gradlew test
#       - name: Write POLYPOD_ANDROID_UPLOAD_KEYSTORE_FILE
#         working-directory: platform/android/app
#         run: 'echo -n "$KEYSTORE" | base64 --decode > keystore.tmp'
#         env:
#           KEYSTORE: ${{ secrets.POLYPOD_ANDROID_UPLOAD_KEYSTORE_FILE }}
#       - name: Build android
#         working-directory: platform/android
#         run: ./gradlew assemble -Psign=true
#         env:
#           POLYPOD_ANDROID_UPLOAD_KEYSTORE_FILE: keystore.tmp
#           POLYPOD_ANDROID_UPLOAD_KEYSTORE_PASS: ${{ secrets.POLYPOD_ANDROID_UPLOAD_KEYSTORE_PASS }}
#           POLYPOD_ANDROID_UPLOAD_KEY_ALIAS: ${{ secrets.POLYPOD_ANDROID_UPLOAD_KEY_ALIAS }}
#       - name: Set VERSION_CODE environment variable.
#         run: echo "VERSION_CODE=$( ./getPackageInfo.sh /usr/local/lib/android/sdk/build-tools/30.0.0/aapt ./app/build/outputs/apk/release/app-release.apk versionCode )" >> $GITHUB_ENV
#         working-directory: platform/android
#       - name: Set VERSION_NAME environment variable.
#         run: echo "VERSION_NAME=$( ./getPackageInfo.sh /usr/local/lib/android/sdk/build-tools/30.0.0/aapt ./app/build/outputs/apk/release/app-release.apk versionName )" >> $GITHUB_ENV
#         working-directory: platform/android
#       - name: Declare some variables to help label APK Upload
#         id: vars
#         shell: bash
#         run: |
#           echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
#           echo "##[set-output name=sha_short;]$(echo ${GITHUB_SHA::7})"
# #      - uses: r0adkll/upload-google-play@9745ef904e395471bca5696056a6ce8a60d18cf8
#       - uses: polypoly-eu/upload-google-play@master
#         with:
#           serviceAccountJsonPlainText: ${{ secrets.POLYPOD_ANDROID_STORE_SERVICE_ACCOUNT_JSON }}
#           packageName: coop.polypoly.polypod
#           releaseName: ${{ env.VERSION_CODE }} (${{ env.VERSION_NAME }}) - ${{ steps.vars.outputs.branch }}@${{ steps.vars.outputs.sha_short }}
#           releaseFiles: ./platform/android/app/build/outputs/apk/release/app-release.apk
#           track: internal
#           # whatsNewDirectory: distribution/whatsnew
#           # mappingFile:

      # iOS

      - name: Lock xcode version
        if: env.POLYPOD_UPLOAD_APP_STORE == "true"
        working-directory: platform/ios
        run: make lockxcodeversion
      # - name: Run tests
      #   working-directory: platform/ios
      #   run: make test
      # - name: Install distribution prerequisites
      #   working-directory: platform/ios
      #   run: make install_distribution_prerequisites
      #   env:
      #     POLYPOD_APPLE_IOS_APPSTORE_P12_FILE_BASE64: ${{ secrets.POLYPOD_APPLE_IOS_APPSTORE_P12_FILE_BASE64 }}
      #     POLYPOD_APPLE_IOS_APPSTORE_P12_PASS: ${{ secrets.POLYPOD_APPLE_IOS_APPSTORE_P12_PASS }}
      #     POLYPOD_APPLE_IOS_APPSTORE_PROVISION_PROFILE_BASE64: ${{ secrets.POLYPOD_APPLE_IOS_APPSTORE_PROVISION_PROFILE_BASE64 }}
      #     POLYPOD_APPLE_IOS_APPSTORE_API_PRIVATE_KEY_BASE64: ${{ secrets.POLYPOD_APPLE_IOS_APPSTORE_API_PRIVATE_KEY_BASE64 }}
      #     POLYPOD_APPLE_IOS_APPSTORE_API_KEY_ID: ${{ secrets.POLYPOD_APPLE_IOS_APPSTORE_API_KEY_ID }}
      # - name: Export and upload IPA
      #   working-directory: platform/ios
      #   run: make upload_ipa
      #   env:
      #     POLYPOD_APPLE_IOS_APPSTORE_API_ISSUER_ID: ${{ secrets.POLYPOD_APPLE_IOS_APPSTORE_API_ISSUER_ID }}
      #     POLYPOD_APPLE_IOS_APPSTORE_API_KEY_ID: ${{ secrets.POLYPOD_APPLE_IOS_APPSTORE_API_KEY_ID }}
